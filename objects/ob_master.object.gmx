<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init global vars

// keys
enum k {
    Left  = 1,
    Right = 2,
    Up    = 3,
    Down  = 4,
    Shoot = 5,
};

// actions pickable
enum a {
    None,
    Pick,
    Shoot,
    Detonate,
}

globalvar grav;
grav = 0.2

globalvar debugEnabled;
debugEnabled = true

// views
viewMode = 1 // 1 - one view, 2 - two separate views

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game setup

application_surface_enable(false)

alarm[0] = 10

if debugEnabled
    show_debug_overlay(true)     


       
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deactivate objects outside views

alarm[0] = 10

instance_deactivate_all(true)
instance_activate_object(ob_player)
instance_activate_object(ob_player_2)

switch viewMode {
case 1:
    instance_activate_region(view_xview[1] - 64, view_yview[1] - 64, view_wview[1] + 128, view_hview[1] + 128, true)
    break;
case 2:
    instance_activate_region(view_xview[1] - 64, view_yview[1]- 64, view_wview[1] + 128, view_hview[1] + 128, true)
    instance_activate_region(view_xview[2] - 64, view_yview[2]- 64, view_wview[2] + 128, view_hview[2] + 128, true)
    break;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Process views

var _dx = abs(ob_player.X - ob_player_2.X)
var _dy = abs(ob_player.Y - ob_player_2.Y)


if (_dx &gt; view_wview[0] * 0.75) or 
   (_dy &gt; view_hview[0] * 0.65) {
    if viewMode&lt;&gt;2 {
        viewMode = 2
        sc_viewmode_change(viewMode)
    } 
} else
if (_dx &lt; view_wview[0] * 0.7) or 
   (_dy &lt; view_hview[0] * 0.6) {
    if viewMode&lt;&gt;1 {
        viewMode = 1
        sc_viewmode_change(viewMode)
    } 
}


switch viewMode {
case 1:
    var _x = (ob_player.X + ob_player_2.X) * 0.5;
    var _y = (ob_player.Y + ob_player_2.Y) * 0.5;
    _x -= view_wview[1] * 0.5
    _y -= view_hview[1] * 0.5
    var _dx = (_x - view_xview[1]) * 0.1;
    var _dy = (_y - view_yview[1]) * 0.1;
    _dx = round(_dx)
    _dy = round(_dy)
    
    view_xview[1] += _dx
    view_yview[1] += _dy
    if view_xview[1] &lt; 0 view_xview[1] = 0
    if view_yview[1] &lt; 0 view_yview[1] = 0
    if view_xview[1] &gt; room_width - view_wview[1]
        view_xview[1] = room_width - view_wview[1]
    if view_yview[1] &gt; room_height - view_hview[1]
        view_yview[1] = room_height - view_hview[1]
    
    break
    
case 2:
    // view 1
    _x = ob_player.X - view_wview[1] * 0.5
    _y = ob_player.Y - view_hview[1] * 0.5
    var _dx = (_x - view_xview[1]) * 0.1;
    var _dy = (_y - view_yview[1]) * 0.1;
    _dx = round(_dx)
    _dy = round(_dy)
    
    view_xview[1] += _dx
    view_yview[1] += _dy
    if view_xview[1] &lt; 0 view_xview[1] = 0
    if view_yview[1] &lt; 0 view_yview[1] = 0
    if view_xview[1] &gt; room_width - view_wview[1]
        view_xview[1] = room_width - view_wview[1]
    if view_yview[1] &gt; room_height - view_hview[1]
        view_yview[1] = room_height - view_hview[1]
    
    // view 2    
    _x = ob_player_2.X - view_wview[2] * 0.5
    _y = ob_player_2.Y - view_hview[2] * 0.5
    var _dx = (_x - view_xview[2]) * 0.1;
    var _dy = (_y - view_yview[2]) * 0.1;
    _dx = round(_dx)
    _dy = round(_dy)
    
    view_xview[2] += _dx
    view_yview[2] += _dy
    if view_xview[2] &lt; 0 view_xview[2] = 0
    if view_yview[2] &lt; 0 view_yview[2] = 0
    if view_xview[2] &gt; room_width - view_wview[2]
        view_xview[2] = room_width - view_wview[2]
    if view_yview[2] &gt; room_height - view_hview[2]
        view_yview[2] = room_height - view_hview[2]

    break
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup views

// views    
view_visible[0] = false
view_visible[1] = true

sc_viewmode_change(viewMode)

// view[0] - sets game scaling and screen size
// view[1] - view for viewMode = 1        (ob_player or both)
// view[2] - second view for viewMode = 2 (ob_player_2)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
