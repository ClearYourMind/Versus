<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ob_isometric</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// image_blend = c_white

image_blend = c_white

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Bounce (Check collision)


collidedWith = noone
collidedX = false
collidedY = false
collidedZ = false
isLanded = false

if dX&lt;&gt;0 or dY&lt;&gt;0
with ob_collidable {
//    if (object_index = ob_wall) and (other.object_index = ob_player)
    if other.id != id
    if not isPicked and not other.isPicked
    {
        if sc_isometric_collision(other.id, id) {
            id.image_blend = c_red
            other.image_blend = c_red
            other.collidedWith = id
        }
        other.X += other.dX  
        if not instance_exists(other.collidedWith)
        if sc_isometric_collision(other.id, id) {
            // horiz collision
            other.collidedX = true
            id.image_blend = c_lime
            if isKnockable
                dX+=other.dX
            other.X -= other.dX 
            other.dX = 0
        }
        other.Y += other.dY 
        if not instance_exists(other.collidedWith)
        if sc_isometric_collision(other.id, id) {
            // vert collision
            other.collidedY = true
            id.image_blend = c_fuchsia
            if isKnockable
                dY+=other.dY
            other.Y -= other.dY
            other.dY = 0
        }
        other.Z += other.dZ 
        if not instance_exists(other.collidedWith)
        if sc_isometric_collision(other.id, id) {
            // Z collision
            other.collidedZ = true
            id.image_blend = c_aqua
//            dY+=other.dY
            other.Z -= other.dZ
            other.dZ = 0
            other.isLanded = true
        }
       // collision found
        other.X -= other.dX
        other.Y -= other.dY
        other.Z -= other.dZ 
        if other.collidedX or other.collidedY or other.collidedZ {
            other.collidedWith = id
            break
        }
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
